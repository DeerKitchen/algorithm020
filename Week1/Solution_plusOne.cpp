/**
*
解题思考：
1、根据题意可知，可对数组最后一个数加1；
2、然后判断加1后该值是否为10：如果不为10，则处理结束，直接返回数组即可；若该值为10，则将该位置零，前一位加1；
3、重复执行第二步操作；
4、需要注意，当数组坐标为0的数值也进行了加1操作时，需要特殊考虑，此时有两种做法：
a.重新生成一个数组，将新数组坐标为0的元素置为1，然后从新数组的元素坐标为1的位置，将原数组的数据依次拷贝到新数组上。或者是在原数组后面新增加一个数组元素，将前面的元素全部向后移动1位，将第一个元素置为1，这两种方法比较容易想到，但时间消耗比较大。
b.另外一种思路，当数组坐标为0的数值也进行了加1操作时，那么该数组的其它位置也进行了加1操作，这就是数学的十进制加法的逻辑，说明所有位置都发生了进位，此时其它位置发生了进位后，都被置为0.那么这种情况下，只需要在数组末尾增加一个元素0，并将开始位置置为1即可。这种处理方法避免了重新生成数组以及移动数值操作。减少了时间消耗。
*/
class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
        if(digits.size() == 0) return {};
        for(int i= digits.size()-1;i>=0;--i) {
            if(++digits[i] == 10) digits[i] = 0;
            else return digits;
        }
        if(digits[0] == 0) {
            digits.emplace_back(0);
            digits[0] = 1;
        }
        return digits;
    }
};
